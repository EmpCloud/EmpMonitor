{
  "openapi": "3.0.0",
  "info": {
    "title": "Employee Management API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Public",
      "description": "Publicly accessible APIs"
    },
    {
      "name": "Private",
      "description": "Restricted APIs (require authentication)"
    }
  ],
  "paths": {
    "/admin/login": {
      "post": {
        "tags": ["Public"],
        "summary": "Admin login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "admin@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Admin@123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token for authentication"
                    }
                  },
                  "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6ImFkbWluIiwiaWF0IjoxNjMzMDA4MjIzLCJleHAiOjE2MzMwMTE4MjN9.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/register": {
        "post": {
            "tags": ["Private"],
            "summary": "Admin registration",
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "firstName": {
                                    "type": "string",
                                    "example": "John"
                                },
                                "lastName": {
                                    "type": "string",
                                    "example": "Doe"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "employee@example.com"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "employeePassword"
                                },
                                "mobileNumber": {
                                  "type": "string",
                                  "example": "1234567890"
                                },
                                "employeeCode": {
                                  "type": "string",
                                  "example": "EMP123"
                                },
                                "timeZone": {
                                  "type": "string",
                                  "example": "UTC"
                                },
                              "departmentId": {
                                "type": "string",
                                "example": "1"
                              },
                              "locationId": {
                                "type": "string",
                                "example": "1"
                              }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Admin registered",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string",
                                        "example": "Internal server error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
      "/admin/web-app-activity": {
        "get": {
          "tags": ["Private"],
          "summary": "Get web app activity records with filters",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "employeeId",
              "in": "query",
              "description": "Employee ID to filter by",
              "required": true,
              "schema": {
                "type": "integer",
                "example": "44"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "Start date to filter by (YYYY-MM-DD)",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date",
                "example": "2024-01-01"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date to filter by (YYYY-MM-DD)",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date",
                "example": "2024-01-31"
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "1 - Application, 2 - Website",
              "required": false,
              "schema": {
                "type": "string",
                "format": "",
                "example": "1"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A list of web app activity records",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "organization_id": { "type": "integer", "example": 1 },
                        "employee_id": { "type": "integer", "example": 44 },
                        "start_time": { "type": "string", "example": "2025-01-21T05:16:49.000Z" },
                        "end_time": { "type": "string", "example": "2025-01-21T05:16:54.000Z" },
                        "yyyymmdd": { "type": "integer", "example": 20250121 },
                        "application_name": { "type": "string", "example": "Windows Explorer" },
                        "title": { "type": "string", "example": "" },
                        "url": { "type": "string", "example": "" },
                        "created_at": { "type": "string", "format": "date-time", "example": "2025-03-26T07:13:40.708Z" },
                        "updated_at": { "type": "string", "format": "date-time", "example": "2025-03-26T07:13:40.708Z" }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Missing required parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "example": "employeeId and startDate are required." },
                       "details":{ "type": "string", "example": "The employeeId and startDate parameters are required for this request. Please provide valid values."}
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": { "type": "string", "example": "Internal server error" },
                      "details" : { "type": "string", "example": "An unexpected error occurred on the server. Please try again later."}
                    }
                  }
                }
              }
            }
          }
        }
      },
  "/admin/employees": {
  "get": {
    "tags": ["Private"],
    "summary": "Get all employees (admin only)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "name": "skip",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 0
        },
        "description": "Number of records to skip"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 10
        },
        "description": "Number of records to return"
      },
      {
        "name": "name",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": ""
        },
        "description": "Search by first name, last name, or email"
      }
    ],
    "responses": {
      "200": {
        "description": "List of employees",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Admin User"
                  },
                  "email": {
                    "type": "string",
                    "example": "admin@example.com"
                  },
                  "role": {
                    "type": "string",
                    "example": "admin"
                  },
                  "employeeCode": {
                    "type": "string",
                    "example": "EMP001"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
},

    "/admin/employees/{id}": {
      "delete": {
        "tags": ["Private"],
        "summary": "Delete Employee (admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the employee to delete.",
            "example": 2
          }
        ],
        "responses": {
          "204": {
            "description": "Employee Deleted"
          },
          "401": {
            "description": "Unauthorized. Admin role required."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "get": {
        "tags": ["Private"],
        "summary": "Get Employee (admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the employee to get data.",
            "example": 2
          }
        ],
        "responses": {
          "204": {
            "description": "Fetch Admin"
          },
          "401": {
            "description": "Unauthorized. Admin role required."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
  "/admin/employee-delete-multiple": {
  "delete": {
    "tags": ["Private"],
    "summary": "Delete Multiple Employees (admin only)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": ["user_ids"],
            "properties": {
              "user_ids": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [1, 2]
              }
            }
          }
        }
      }
    },
    "responses": {
      "204": {
        "description": "Employees Deleted"
      },
      "401": {
        "description": "Unauthorized. Admin role required."
      },
      "500": {
        "description": "Internal server error."
      }
    }
  }
},
 "/admin/update-employee": {
  "put": {
    "tags": ["Private"],
    "summary": "Update Employee (admin only)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": [
              "employeeId",
              "firstName",
              "lastName",
              "employeeRole",
              "mobileNumber",
              "employeeCode",
              "timeZone",
              "password",
              "email"
            ],
            "properties": {
              "employeeId": {
                "type": "number"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "employeeRole": {
                "type": "string"
              },
              "mobileNumber": {
                "type": "string"
              },
              "employeeCode": {
                "type": "string"
              },
              "timeZone": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "example": {
              "employeeId": 57,
              "firstName": "First",
              "lastName": "User",
              "employeeRole": "employee",
              "mobileNumber": "900000000",
              "employeeCode": "EMP-1",
              "timeZone": "UTC",
              "password": "User@123",
              "email": "first_user@mail.com"
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Employee Updated"
      },
      "401": {
        "description": "Unauthorized. Admin role required."
      },
      "500": {
        "description": "Internal server error."
      }
    }
  }
},
"/admin/attendance": {
  "post": {
    "tags": ["Private"],
    "summary": "Get all attendance records (admin only)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "format": "date-time",
                "example": "2025-04-22T00:00:00Z",
                "default": "2025-04-22T00:00:00Z"
              },
              "end_date": {
                "type": "string",
                "format": "date-time",
                "example": "2025-04-22T23:59:59Z",
                "default": "2025-04-22T23:59:59Z"
              },
              "skip": {
                "type": "integer",
                "default": 0
              },
              "limit": {
                "type": "integer",
                "default": 10
              },
              "employee_id": {
                "type": "integer",
                "default": 57
              },
              "name": {
                "type": "string",
                "default": ""
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "A list of attendance records.",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "employee_id": { "type": "integer" },
                  "date": { "type": "string", "format": "date" },
                  "start_time": { "type": "string", "format": "date-time" },
                  "end_time": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        }
      },
      "401": { "description": "Unauthorized. Admin role required." },
      "500": { "description": "Internal server error." }
    }
  }
},
    "/admin/get-departments": {
      "get": {
        "tags": ["Private"],
        "summary": "Get all departments",
            "security": [
      {
        "bearerAuth": []
      }
    ],
        "responses": {
          "200": {
            "description": "List of departments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Department"
                      }
                    },
                    "error": { "type": "string", "nullable": true },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/add-department": {
      "post": {
        "tags": ["Private"],
        "summary": "Add a new department",
            "security": [
      {
        "bearerAuth": []
      }
    ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "departmentName": { "type": "string" },
                  "locationId": { "type": "integer" }
                },
                "required": ["departmentName, locationId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department added successfully"
          },
          "400": {
            "description": "Invalid input or department already exists"
          }
        }
      }
    },
    "/admin/update-department": {
      "put": {
        "tags": ["Private"],
        "summary": "Update a department",
            "security": [
      {
        "bearerAuth": []
      }
    ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "departmentName": { "type": "string" }
                },
                "required": ["id", "departmentName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/delete-department/{id}": {
      "delete": {
        "tags": ["Private"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete a department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department deleted successfully"
          },
          "400": {
            "description": "Department is in use or invalid id"
          }
        }
      }
    },
    "/employee/login": {
      "post": {
        "tags": ["Public"],
        "summary": "Employee login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "first_user@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "User@123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token for authentication"
                    }
                  },
                  "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Miwicm9sZSI6ImVtcGxveWVlIiwiaWF0IjoxNjMzMDA4MjIzLCJleHAiOjE2MzMwMTE4MjN9.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employee": {
      "put": {
        "tags": ["Private"],
        "summary": "Update employee details",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Updated First Name"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Updated Last Name"
                  },
                  "email": {
                    "type": "string",
                    "example": "updated.email@example.com"
                  },
                  "role": {
                    "type": "string",
                    "example": "employee"
                  },
                  "mobileNumber": {
                    "type": "string",
                    "example": "987654321"
                  },
                  "employeeCode": {
                    "type": "string",
                    "example": "EMP002"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Employee updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Private"],
        "summary": "get employee details",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "employee details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "example": "Employee Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "employee.email@example.com"
                    },
                    "role": {
                      "type": "string",
                      "example": "employee"
                    },
                    "employeeCode":{
                        "type":"string",
                        "example":"EMP002"
                    }
                  }
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized, Invalid Token",
            "content":{
                "application/json": {
                    "schema": {
                        "type":"object",
                        "properties": {
                            "error":{
                                "type":"string",
                                "example":"Unauthorized, Invalid Token"
                            }
                        }
                    }
                }
            }
          },
          "500":{
            "description": "Internal Server Error",
              "content":{
                "application/json": {
                  "schema":{
                    "type":"object",
                    "properties":{
                      "error":{
                        "type":"string",
                        "example":"Internal Server Error"
                      }
                    }
                  }
                }
              }
          }
        }
      }
    },
    "/employee/attendance": {
      "post": {
        "tags": ["Private"],
        "summary": "Get all attendance records (Employee only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of attendance records.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": { "type": "string", "format": "date" },
                  "start_time": { "type": "string", "format": "date-time" },
                  "end_time": { "type": "string", "format": "date-time" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized. Admin role required." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/employee/web-app-activity": {
        "get": {
          "tags": ["Private"],
          "summary": "Get web app activity records with filters",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "employeeId",
              "in": "query",
              "description": "Employee ID to filter by",
              "required": true,
              "schema": {
                "type": "integer",
                "example": "44"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "Start date to filter by (YYYY-MM-DD)",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date",
                "example": "2024-01-01"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date to filter by (YYYY-MM-DD)",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date",
                "example": "2024-01-31"
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "1 - Application, 2 - Website",
              "required": false,
              "schema": {
                "type": "string",
                "format": "",
                "example": "1"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A list of web app activity records",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "organization_id": { "type": "integer", "example": 1 },
                        "employee_id": { "type": "integer", "example": 44 },
                        "start_time": { "type": "string", "example": "2025-01-21T05:16:49.000Z" },
                        "end_time": { "type": "string", "example": "2025-01-21T05:16:54.000Z" },
                        "yyyymmdd": { "type": "integer", "example": 20250121 },
                        "application_name": { "type": "string", "example": "Windows Explorer" },
                        "title": { "type": "string", "example": "" },
                        "url": { "type": "string", "example": "" },
                        "created_at": { "type": "string", "format": "date-time", "example": "2025-03-26T07:13:40.708Z" },
                        "updated_at": { "type": "string", "format": "date-time", "example": "2025-03-26T07:13:40.708Z" }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Missing required parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "example": "employeeId and startDate are required." },
                       "details":{ "type": "string", "example": "The employeeId and startDate parameters are required for this request. Please provide valid values."}
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": { "type": "string", "example": "Internal server error" },
                      "details" : { "type": "string", "example": "An unexpected error occurred on the server. Please try again later."}
                    }
                  }
                }
              }
            }
          }
        }
    },

   "/admin/locations": {
      "get": {
        "tags": ["Private"],
        "summary": "Get all locations",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "location_name": {
                            "type": "string",
                            "example": "Bengaluru"
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Database connection failed"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Private"],
        "summary": "Add a new location",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "locationName": {
                    "type": "string",
                    "example": "Mumbai"
                  }
                },
                "required": [
                  "locationName"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        },
                        "locationName": {
                          "type": "string",
                          "example": "Mumbai"
                        }
                      }
                    },
                    "error": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or location already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "error": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid inputs"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Database error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/locations/{id}": {
      "put": {
        "tags": ["Private"],
        "summary": "Update a location by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "locationName": {
                    "type": "string",
                    "example": "New York"
                  }
                },
                "required": [
                  "id",
                  "locationName"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "locationName": {
                          "type": "string",
                          "example": "New York"
                        }
                      }
                    },
                    "error": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "error": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid inputs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "error": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Location with id 1 not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Database update failed"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Private"],
        "summary": "Delete a location by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "error": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or location has linked departments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "error": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid inputs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "error": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Location with id 1 not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Database deletion failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/report": {
        "get": {
          "tags": [
            "Private"
          ],
          "summary": "Admin login",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "employee_id",
              "in": "query",
              "description": "employee id",
              "schema": {
                "type": "integer",
                "example": "10"
              }
            },
            {
              "name": "department_id",
              "in": "query",
              "description": "department id",
              "schema": {
                "type": "integer",
                "example": "10"
              }
            },
            {
              "name": "location_id",
              "in": "query",
              "description": "location id",
              "schema": {
                "type": "integer",
                "example": "10"
              }
            },
            {
              "name": "start_date",
              "in": "query",
              "description": "Start date to filter by (YYYY-MM-DD)",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date",
                "example": "2024-01-01"
              }
            },
            {
              "name": "end_date",
              "in": "query",
              "description": "End date to filter by (YYYY-MM-DD)",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date",
                "example": "2024-01-31"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful login",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "JWT token for authentication"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid credentials",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid credentials"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
    },
    "/admin/localization": {
      "get": {
        "tags": ["Private"],
        "summary": "Get localization data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Localization data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string",
                      "example": "en"
                    },
                    "timezone": {
                      "type": "string",
                      "example": "Asia/Kolkata"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or language not found"
          }
        }
      },
      "post": {
        "tags": ["Private"],
        "summary": "Update localization data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string",
                    "example": "en"
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Asia/Kolkata"
                  }
                },
                "required": [
                  "language",
                  "timezone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Localization data updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    }
    ,
    "/admin/productivity-rules": {
      "get": {
        "tags": ["Private"],
        "summary": "Get productivity rules",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0 },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 10 },
            "description": "Number of records to return"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "" },
            "description": "Search by application name/title/url/category"
          }
        ],
        "responses": {
          "200": {
            "description": "List of productivity rules",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "integer", "example": 200 },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": { "type": "array", "items": { "type": "object" } },
                        "count": { "type": "integer", "example": 42 }
                      }
                    },
                    "message": { "type": "string", "example": "Success" }
                  }
                }
              }
            }
          },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "tags": ["Private"],
        "summary": "Update a productivity rule",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "662b1c9f5a7f4a001234abcd" },
                  "category": { "type": "string", "example": "productive" }
                },
                "required": ["_id", "category"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Productivity rule updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "integer", "example": 200 },
                    "data": { "type": "object" },
                    "message": { "type": "string", "example": "Success" }
                  }
                }
              }
            }
          },
          "404": { "description": "Productivity rule not found" },
          "500": { "description": "Internal server error" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Department": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Technology"
        },
        "location_id": {
          "type": "integer",
          "example": 2
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "example": "2025-04-01T12:00:00Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "example": "2025-04-01T12:00:00Z"
        }
      },
      "required": ["id", "name", "location_id"]
      }
    }
  }
}